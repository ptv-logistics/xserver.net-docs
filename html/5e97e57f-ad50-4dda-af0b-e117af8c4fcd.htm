<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Theming Concept</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="5e97e57f-ad50-4dda-af0b-e117af8c4fcd" /><meta name="Description" content="This page explains the theming concept used in the xServer .NET Framework." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">PTV xServer .NET<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\9e985ce7-8d43-434f-82bb-260b742553c1.htm" title="PTV xServer .NET" tocid="roottoc">PTV xServer .NET</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/7101665d-481f-449c-ae22-4f6a21aba3e8.htm" title="Concepts" tocid="7101665d-481f-449c-ae22-4f6a21aba3e8">Concepts</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/06a654f3-afbd-4f00-9c8e-36997e2a3951.htm" title="Shape Layer Concept" tocid="06a654f3-afbd-4f00-9c8e-36997e2a3951">Shape Layer Concept</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/efdeef71-8995-49a7-b15c-01f3dd65a3c8.htm" title="Custom Layers Concept" tocid="efdeef71-8995-49a7-b15c-01f3dd65a3c8">Custom Layers Concept</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/22E8CFA4-B9CE-4F97-A90D-C32E3AF957F9.htm" title="Coordinates Concept" tocid="22E8CFA4-B9CE-4F97-A90D-C32E3AF957F9">Coordinates Concept</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/918149a8-2996-40a9-878d-12a002e6b222.htm" title="Layer Priorities Concept" tocid="918149a8-2996-40a9-878d-12a002e6b222">Layer Priorities Concept</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8f6464b9-058b-4427-93a1-a0ce88eab26e.htm" title="Map and Layers Concept" tocid="8f6464b9-058b-4427-93a1-a0ce88eab26e">Map and Layers Concept</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/28b979e6-9140-4d12-b62a-ef9a5be263a4.htm" title="Map Viewport Concept" tocid="28b979e6-9140-4d12-b62a-ef9a5be263a4">Map Viewport Concept</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/5e97e57f-ad50-4dda-af0b-e117af8c4fcd.htm" title="Theming Concept" tocid="5e97e57f-ad50-4dda-af0b-e117af8c4fcd">Theming Concept</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/12bdf69b-60fc-4fe9-86e6-16b0adac2972.htm" title="Logging Concept" tocid="12bdf69b-60fc-4fe9-86e6-16b0adac2972">Logging Concept</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Theming Concept</h1></td></tr></table><span class="introStyle"></span> <div class="introduction"><p>This page explains the theming concept used in the xServer .NET Framework.</p><p>This page contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#Basics">Basics</a></li><li class="outlineSectionEntry"><a href="#DefiningTheShape">Defining the shape</a></li><li class="outlineSectionEntry"><a href="#DefiningTheBehavior">Defining the behavior</a></li><li class="outlineSectionEntry"><a href="#seeAlsoSection">See Also</a></li></ul></div><div class="collapsibleAreaRegion" id="Basics"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Basics</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
          The themes used by the map and its elements are a standard WPF mechanism. There are several ways to apply themes. How to set a theme
          from a stream (like for example from a file or an embedded resource) or to use the built-in default theme is described in the sections above.
        </p><p>
          WPF themes are (usually) defined with XAML. Some sample themes are included in the Demo Center sources. They can be the base for 
          customizations. From the demo themes the parts can be identified which have to be defined for full theming of the map and its children.
        </p><p>
          There is a hierarchy in which theming is applied to controls. Setting a theme on a higher level usually means that all of the lower levels
          inherit these styles. If a style is set on a certain level (below the application level), the corresponding style settings (which have
          been inherited from a higer level) will be overridden. That is, the new style is set beginning from the current level down the hierarchy.
        </p><p>
          The styling hierarchy is defined as follows (from higher to lower levels):
        </p><ul><li><p>Application (App.xaml)</p></li><li><p>MainWindow of the Application (MainWindow.xaml)</p></li><li><p>MapControl in the Map DLL (WPFMap.xaml)</p></li><li><p>MapGadget XAML (e.g. NavigationGadget.xaml)</p></li></ul><p>
          Setting the theme on the highest (application) level in the file App.xaml looks for example like this:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACADAAA_tab1" class="codeSnippetContainerTabSingle">Setting the application theme.</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">ResourceDictionary</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">ResourceDictionary.MergedDictionaries</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">ResourceDictionary</span> <span class="highlight-xml-attribute-name">Source</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"WPF Themes\ExpressionDark.xaml"</span><span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">ResourceDictionary.MergedDictionaries</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">ResourceDictionary</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACADAAA");</script><p>
          Furthermore, there is an order in which the styles within a level are applied. For example, if a style and/or a property
          of a WPF element is set on the MainWindow.xaml level, it depends on the code part which setting will be applied. This are the sections
          (from highest to lowest priority):
        </p><ul><li><p>Definition in the C# code part</p></li><li><p>Definition in the XAML part</p></li><li><p>Definition in the theme XAML (MapGadget XAML before MapControl XAML before MainWindow XAML before App.xaml)</p></li></ul></div><div class="collapsibleAreaRegion" id="DefiningTheShape"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Defining the shape</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
          The following explanations refer to buttons because they are a commonly used control type. But most of the details also apply
          to other control types.
        </p><p>
          To simply change a property in XAML, the following can be done:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAEACAAA_tab1" class="codeSnippetContainerTabSingle">Setting the button's background color.</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAEACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAEACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAEACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Button</span> <span class="highlight-xml-attribute-name">Background</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Green"</span> <span class="highlight-xml-bracket">/&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAEACAAA");</script><p>
          To change the shape the Clip property can be used. A GeometryGroup object has to be defined, which can be assigned to the Clip
          property. By doing so, geometric primitives (lines, arcs, etc.) can be used.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACACAAA_tab1" class="codeSnippetContainerTabSingle">Setting the button's shape.</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">GeometryGroup</span> <span class="highlight-xml-attribute-name">x:Key</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"UpButtonGeometry"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">PathGeometry</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">PathFigure</span> <span class="highlight-xml-attribute-name">StartPoint</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"5,20"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">ArcSegment</span> <span class="highlight-xml-attribute-name">Size</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"40,40"</span> <span class="highlight-xml-attribute-name">RotationAngle</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0"</span> <span class="highlight-xml-attribute-name">IsLargeArc</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"False"</span> <span class="highlight-xml-attribute-name">SweepDirection</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Clockwise"</span> <span class="highlight-xml-attribute-name">Point</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"60,20"</span> <span class="highlight-xml-attribute-name">IsSmoothJoin</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"True"</span><span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">LineSegment</span> <span class="highlight-xml-attribute-name">Point</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"45,35"</span> <span class="highlight-xml-attribute-name">IsSmoothJoin</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"True"</span><span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">ArcSegment</span> <span class="highlight-xml-attribute-name">Size</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"20,20"</span> <span class="highlight-xml-attribute-name">RotationAngle</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0"</span> <span class="highlight-xml-attribute-name">IsLargeArc</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"False"</span> <span class="highlight-xml-attribute-name">SweepDirection</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Counterclockwise"</span> <span class="highlight-xml-attribute-name">Point</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"20,35"</span> <span class="highlight-xml-attribute-name">IsSmoothJoin</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"True"</span><span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">LineSegment</span> <span class="highlight-xml-attribute-name">Point</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"5,20"</span> <span class="highlight-xml-attribute-name">IsSmoothJoin</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"True"</span><span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">PathFigure</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">PathGeometry</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">GeometryGroup</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACACAAA");</script><p>
          This will result in such a shape:
        </p><div class="mediaCenter"><img alt="Geometry Group Shape" src="../media/GeometryGroupShape.png" /></div></div><div class="collapsibleAreaRegion" id="DefiningTheBehavior"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Defining the behavior</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
          The following explanations refer to buttons because they are a commonly used control type. But most of the details also apply
          to other control types.
        </p><p>
          WPF allows the definition of a control's behavior. For example, an animation of properties (position, color, opacity, etc.)
          on mouse events (mouse enter, leave, etc.) can be implemented. To achieve custom behavior, a ControlTemplate has to be defined.
        </p><p>
          The drawback of defining a ControlTemplate is that it has to be defined fully. This means, if the hover action should be defined, 
          the click, enter, leave, focused, etc. actions have to be defined too. Each control has a default behavior, which then has
          to be redefined. If not, simply nothing will happen, especially not the defaults, which might be expected in this case.
        </p><p>
          Furthermore, a custom ControlTemplate might also override styles defined by a theme (XAML before theme). See the sections above
          for more information about the theming/styling hierarchy in WPF.
        </p><p>
          The ControlTemplate can be defined in the resources and assigned by using the Template property of a control instance.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABAAA_tab1" class="codeSnippetContainerTabSingle">Setting the button's behavior.</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Storyboard</span> <span class="highlight-xml-attribute-name">x:Key</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"HoverOn"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">DoubleAnimation</span> <span class="highlight-xml-attribute-name">Duration</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"00:00:00.1000000"</span> <span class="highlight-xml-attribute-name">Storyboard.TargetName</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"BackgroundOver"</span> <span class="highlight-xml-attribute-name">Storyboard.TargetProperty</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Opacity"</span> <span class="highlight-xml-attribute-name">To</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Storyboard</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Storyboard</span> <span class="highlight-xml-attribute-name">x:Key</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"HoverOff"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">DoubleAnimation</span> <span class="highlight-xml-attribute-name">Duration</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"00:00:00.4000000"</span> <span class="highlight-xml-attribute-name">Storyboard.TargetName</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"BackgroundOver"</span> <span class="highlight-xml-attribute-name">Storyboard.TargetProperty</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Opacity"</span> <span class="highlight-xml-attribute-name">To</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Storyboard</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Storyboard</span> <span class="highlight-xml-attribute-name">x:Key</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"PressedOn"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">DoubleAnimation</span> <span class="highlight-xml-attribute-name">Duration</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"00:00:00.1000000"</span> <span class="highlight-xml-attribute-name">Storyboard.TargetName</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"BackgroundPressed"</span> <span class="highlight-xml-attribute-name">Storyboard.TargetProperty</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Opacity"</span> <span class="highlight-xml-attribute-name">To</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0.84"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Storyboard</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Storyboard</span> <span class="highlight-xml-attribute-name">x:Key</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"PressedOff"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">DoubleAnimation</span> <span class="highlight-xml-attribute-name">Duration</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"00:00:00.4000000"</span> <span class="highlight-xml-attribute-name">Storyboard.TargetName</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"BackgroundPressed"</span> <span class="highlight-xml-attribute-name">Storyboard.TargetProperty</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Opacity"</span> <span class="highlight-xml-attribute-name">To</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Storyboard</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Storyboard</span> <span class="highlight-xml-attribute-name">x:Key</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"DisabledOn"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">ObjectAnimationUsingKeyFrames</span> <span class="highlight-xml-attribute-name">BeginTime</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"00:00:00"</span> <span class="highlight-xml-attribute-name">Storyboard.TargetName</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"DisabledVisualElement"</span> <span class="highlight-xml-attribute-name">Storyboard.TargetProperty</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"(UIElement.Visibility)"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">DiscreteObjectKeyFrame</span> <span class="highlight-xml-attribute-name">KeyTime</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"00:00:00.1000000"</span> <span class="highlight-xml-attribute-name">Value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{x:Static Visibility.Visible}"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">ObjectAnimationUsingKeyFrames</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Storyboard</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Storyboard</span> <span class="highlight-xml-attribute-name">x:Key</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"FocusedOn"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">DoubleAnimationUsingKeyFrames</span> <span class="highlight-xml-attribute-name">BeginTime</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"00:00:00"</span> <span class="highlight-xml-attribute-name">Storyboard.TargetName</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"FocusVisualElement"</span> <span class="highlight-xml-attribute-name">Storyboard.TargetProperty</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"(UIElement.Opacity)"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">SplineDoubleKeyFrame</span> <span class="highlight-xml-attribute-name">KeyTime</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"00:00:00.1000000"</span> <span class="highlight-xml-attribute-name">Value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">DoubleAnimationUsingKeyFrames</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Storyboard</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Storyboard</span> <span class="highlight-xml-attribute-name">x:Key</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"FocusedOff"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">DoubleAnimationUsingKeyFrames</span> <span class="highlight-xml-attribute-name">BeginTime</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"00:00:00"</span> <span class="highlight-xml-attribute-name">Storyboard.TargetName</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"FocusVisualElement"</span> <span class="highlight-xml-attribute-name">Storyboard.TargetProperty</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"(UIElement.Opacity)"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">SplineDoubleKeyFrame</span> <span class="highlight-xml-attribute-name">KeyTime</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"00:00:00.3000000"</span> <span class="highlight-xml-attribute-name">Value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">DoubleAnimationUsingKeyFrames</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Storyboard</span><span class="highlight-xml-bracket">&gt;</span>

<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">ControlTemplate</span> <span class="highlight-xml-attribute-name">x:Key</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"UpButton"</span> <span class="highlight-xml-attribute-name">TargetType</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{x:Type Button}"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Grid</span> <span class="highlight-xml-attribute-name">x:Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Grid"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Path</span> <span class="highlight-xml-attribute-name">x:Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"BackgroundNorm"</span> <span class="highlight-xml-attribute-name">Fill</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{Binding ElementName=Navigation, Path=BackgroundColorBrush}"</span> <span class="highlight-xml-attribute-name">Opacity</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1"</span> <span class="highlight-xml-attribute-name">Data</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{StaticResource UpButtonGeometry}"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Path</span> <span class="highlight-xml-attribute-name">x:Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"BackgroundOver"</span> <span class="highlight-xml-attribute-name">Stroke</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{Binding ElementName=Navigation, Path=ForegroundColorBrush}"</span> <span class="highlight-xml-attribute-name">StrokeThickness</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1"</span> <span class="highlight-xml-attribute-name">Opacity</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0"</span> <span class="highlight-xml-attribute-name">Data</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{StaticResource UpButtonGeometry}"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Path</span> <span class="highlight-xml-attribute-name">x:Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"BackgroundPressed"</span> <span class="highlight-xml-attribute-name">Fill</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{Binding ElementName=Navigation, Path=ForegroundColorBrush}"</span> <span class="highlight-xml-attribute-name">Opacity</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0"</span> <span class="highlight-xml-attribute-name">Data</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{StaticResource UpButtonGeometry}"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Path</span> <span class="highlight-xml-attribute-name">x:Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"DisabledVisualElement"</span> <span class="highlight-xml-attribute-name">Fill</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"DarkGray"</span> <span class="highlight-xml-attribute-name">Opacity</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0"</span> <span class="highlight-xml-attribute-name">Data</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{StaticResource UpButtonGeometry}"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">ContentPresenter</span> <span class="highlight-xml-attribute-name">x:Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"ContentPresenter"</span> <span class="highlight-xml-attribute-name">Content</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{TemplateBinding Content}"</span> <span class="highlight-xml-attribute-name">ContentTemplate</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{TemplateBinding ContentTemplate}"</span> <span class="highlight-xml-attribute-name">VerticalAlignment</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{TemplateBinding VerticalContentAlignment}"</span> <span class="highlight-xml-attribute-name">HorizontalAlignment</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{TemplateBinding HorizontalContentAlignment}"</span> <span class="highlight-xml-attribute-name">Margin</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{TemplateBinding Padding}"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Path</span> <span class="highlight-xml-attribute-name">x:Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"FocusVisualElement"</span> <span class="highlight-xml-attribute-name">Stroke</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{Binding ElementName=Navigation, Path=ForegroundColorBrush}"</span> <span class="highlight-xml-attribute-name">StrokeThickness</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1"</span> <span class="highlight-xml-attribute-name">Opacity</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0"</span> <span class="highlight-xml-attribute-name">Data</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{StaticResource UpButtonGeometry}"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Grid</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">ControlTemplate.Triggers</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Trigger</span> <span class="highlight-xml-attribute-name">Property</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"IsFocused"</span> <span class="highlight-xml-attribute-name">Value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"True"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Trigger.EnterActions</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">BeginStoryboard</span> <span class="highlight-xml-attribute-name">x:Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"FocusedOn_BeginStoryboard"</span> <span class="highlight-xml-attribute-name">Storyboard</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{StaticResource FocusedOn}"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Trigger.EnterActions</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Trigger.ExitActions</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">BeginStoryboard</span> <span class="highlight-xml-attribute-name">x:Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"FocusedOff_BeginStoryboard"</span> <span class="highlight-xml-attribute-name">Storyboard</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{StaticResource FocusedOff}"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Trigger.ExitActions</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Trigger</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Trigger</span> <span class="highlight-xml-attribute-name">Property</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"IsKeyboardFocused"</span> <span class="highlight-xml-attribute-name">Value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"true"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Trigger.ExitActions</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">BeginStoryboard</span> <span class="highlight-xml-attribute-name">x:Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"FocusedOff_BeginStoryboard1"</span> <span class="highlight-xml-attribute-name">Storyboard</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{StaticResource FocusedOff}"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Trigger.ExitActions</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Trigger.EnterActions</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">BeginStoryboard</span> <span class="highlight-xml-attribute-name">x:Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"FocusedOn_BeginStoryboard1"</span> <span class="highlight-xml-attribute-name">Storyboard</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{StaticResource FocusedOn}"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Trigger.EnterActions</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Trigger</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Trigger</span> <span class="highlight-xml-attribute-name">Property</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"IsMouseOver"</span> <span class="highlight-xml-attribute-name">Value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"true"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Trigger.ExitActions</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">BeginStoryboard</span> <span class="highlight-xml-attribute-name">Storyboard</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{StaticResource HoverOff}"</span> <span class="highlight-xml-attribute-name">x:Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"HoverOff_BeginStoryboard"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Trigger.ExitActions</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Trigger.EnterActions</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">BeginStoryboard</span> <span class="highlight-xml-attribute-name">Storyboard</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{StaticResource HoverOn}"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Trigger.EnterActions</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Trigger</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Trigger</span> <span class="highlight-xml-attribute-name">Property</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"IsPressed"</span> <span class="highlight-xml-attribute-name">Value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"true"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Trigger.ExitActions</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">BeginStoryboard</span> <span class="highlight-xml-attribute-name">Storyboard</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{StaticResource PressedOff}"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Trigger.ExitActions</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Trigger.EnterActions</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">BeginStoryboard</span> <span class="highlight-xml-attribute-name">Storyboard</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{StaticResource PressedOn}"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Trigger.EnterActions</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Trigger</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Trigger</span> <span class="highlight-xml-attribute-name">Property</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"IsEnabled"</span> <span class="highlight-xml-attribute-name">Value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"true"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Trigger</span> <span class="highlight-xml-attribute-name">Property</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"IsEnabled"</span> <span class="highlight-xml-attribute-name">Value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Trigger.EnterActions</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">BeginStoryboard</span> <span class="highlight-xml-attribute-name">Storyboard</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{StaticResource DisabledOn}"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Trigger.EnterActions</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Setter</span> <span class="highlight-xml-attribute-name">Property</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Foreground"</span> <span class="highlight-xml-attribute-name">Value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"{Binding ElementName=Navigation, Path=ForegroundColorBrush}"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Setter</span> <span class="highlight-xml-attribute-name">Property</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Opacity"</span> <span class="highlight-xml-attribute-name">TargetName</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"DisabledVisualElement"</span> <span class="highlight-xml-attribute-name">Value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1"</span> <span class="highlight-xml-bracket">/&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Trigger</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">ControlTemplate.Triggers</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">ControlTemplate</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABAAA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="M_Ptv_XServer_Controls_Map_Map_SetThemeFromXaml.htm">SetThemeFromXaml(Stream)</a></div><div class="seeAlsoStyle"><a href="P_Ptv_XServer_Controls_Map_Map_UseDefaultTheme.htm">UseDefaultTheme</a></div><div class="seeAlsoStyle"><a href="http://msdn2.microsoft.com/en-us/library/8f86tw9e" target="_blank">Stream</a></div></div></div></div><div id="pageFooter" class="pageFooter">Visit our website at <a href="http://www.ptvgroup.com">www.ptvgroup.com</a> or browse to <a href="http://xserver.ptvgroup.com">xserver.ptvgroup.com</a> for the latest information on our developer components.<p>Copyright (c) PTV Group, Karlsruhe, Germany.</p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:developer%40ptvgroup.com?Subject=PTV xServer .NET">developer@ptvgroup.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>